package test;

import simpledb.plan.Planner;
import simpledb.server.SimpleDB;
import simpledb.tx.Transaction;

public class CreateRealDemoDB {
    public static void main(String[] args) {

        try {
            SimpleDB db = new SimpleDB("studentdb");

            Transaction tx = db.newTx();
            Planner planner = db.planner();

            String qry = "create table STUDENT(SId int, SName varchar(20), MajorId int, GradYear int)";
            planner.executeUpdate(qry, tx);
            System.out.println("Table STUDENT created.");

            qry = "insert into STUDENT(SId, SName, MajorId, GradYear) values ";
            //Problem names: D'arcy, Miof, Terri-jo
            String[] studvals = {"(1,'Aurthur',30,2006)",
                    "(2,'Allie',80,2009)",
                    "(3,'Earl',60,2018)",
                    "(4,'Silvana',80,2004)",
                    "(5,'Boyce',40,2016)",
                    "(6,'Lilas',50,2020)",
                    "(7,'Teriann',10,2001)",
                    "(8,'Haleigh',70,2000)",
                    "(9,'Adorne',80,2016)",
                    "(10,'Chicky',90,2017)",
                    "(11,'Drucill',70,2013)",
                    "(12,'Lucilia',80,2020)",
                    "(13,'Cherri',80,2012)",
                    "(14,'Camala',40,2017)",
                    "(15,'Benedicto',80,2005)",
                    "(16,'Hedi',10,2008)",
                    "(17,'Spense',10,2018)",
                    "(18,'Osbourne',80,2007)",
                    "(19,'Carling',30,2001)",
                    "(20,'Linet',80,2005)",
                    "(21,'Conn',60,2001)",
                    "(22,'Vivia',90,2001)",
                    "(23,'Fannie',30,2001)",
                    "(24,'Lovell',20,2010)",
                    "(25,'Leshia',60,2012)",
                    "(26,'Terence',60,2007)",
                    "(27,'Beitris',80,2002)",
                    "(28,'Shelton',60,2010)",
                    "(29,'Simona',90,2012)",
                    "(30,'Mario',10,2020)",
                    "(31,'Reidar',30,2001)",
                    "(32,'Moishe',70,2022)",
                    "(33,'Jonie',20,2004)",
                    "(34,'Leela',90,2017)",
                    "(35,'Sholom',20,2004)",
                    "(36,'Morissa',40,2021)",
                    "(37,'Giuditta',60,2000)",
                    "(38,'Camila',60,2008)",
                    "(39,'Zollie',60,2021)",
                    "(40,'Kristopher',70,2020)",
                    "(41,'Rubin',70,2014)",
                    "(42,'Lavena',30,2010)",
                    "(43,'Giles',20,2016)",
                    "(44,'Amii',80,2016)",
                    "(45,'Seumas',90,2011)",
                    "(46,'Jermaine',40,2019)",
                    "(47,'Carina',70,2021)",
                    "(48,'Weider',80,2004)",
                    "(49,'Pauletta',80,2015)",
                    "(50,'Jermaine',40,2004)",
                    "(51,'Marieann',40,2020)",
                    "(52,'Jackqueline',70,2010)",
                    "(53,'Franny',90,2007)",
                    "(54,'Natal',70,2019)",
                    "(55,'Janette',40,2019)",
                    "(56,'Freddy',90,2005)",
                    "(57,'Carlita',20,2019)",
                    "(58,'Nerta',40,2018)",
                    "(59,'Cindi',10,2022)",
                    "(60,'Wheeler',70,2009)",
                    "(61,'Dynah',60,2010)",
                    "(62,'Carmelina',90,2004)",
                    "(63,'Karim',80,2000)",
                    "(64,'Carlie',70,2012)",
                    "(65,'Yorgos',70,2003)",
                    "(66,'Wallache',90,2006)",
                    "(67,'Fergus',70,2010)",
                    "(68,'Jacinthe',80,2020)",
                    "(69,'Delbert',90,2003)",
                    "(70,'Bette-ann',70,2022)",
                    "(71,'Aggie',90,2011)",
                    "(72,'Ronnie',20,2021)",
                    "(73,'Elfie',20,2018)",
                    "(74,'Nike',80,2017)",
                    "(75,'Candi',70,2022)",
                    "(76,'Kerby',40,2021)",
                    "(77,'Roseanna',50,2021)",
                    "(78,'Anders',60,2005)",
                    "(79,'Patty',20,2019)",
                    "(80,'Sly',60,2022)",
                    "(81,'Lindy',10,2012)",
                    "(82,'Jarrid',70,2001)",
                    "(83,'Francisca',30,2001)",
                    "(84,'Ara',70,2014)",
                    "(85,'Verina',90,2000)",
                    "(86,'Padraic',60,2005)",
                    "(87,'Zak',80,2012)",
                    "(88,'Jeremias',70,2005)",
                    "(89,'Loni',70,2008)",
                    "(90,'Adora',30,2009)",
                    "(91,'Yurik',30,2020)",
                    "(92,'Kirsten',40,2013)",
                    "(93,'Terrijo',20,2019)",
                    "(94,'Linnea',20,2002)",
                    "(95,'Chadd',30,2001)",
                    "(96,'Cam',10,2016)",
                    "(97,'Caterina',70,2012)",
                    "(98,'Barnie',60,2019)",
                    "(99,'Kerri',80,2009)",
                    "(100,'Warner',30,2001)"
            };
            for (int i = 0; i < studvals.length; i++)
                planner.executeUpdate(qry + studvals[i], tx);
            System.out.println("STUDENT records inserted.");

            qry = "create table DEPT(DId int, DName varchar(20))";
            planner.executeUpdate(qry, tx);
            System.out.println("Table DEPT created.");

            qry = "insert into DEPT(DId, DName) values ";
            String[] deptvals = {"(10, 'computing')",
                    "(20, 'math')",
                    "(30, 'law')",
                    "(40, 'arts')",
                    "(50, 'business')",
                    "(60, 'engineering')",
                    "(70, 'architecture')",
                    "(80, 'medicine')",
                    "(90, 'dentistry')"};
            for (int i = 0; i < deptvals.length; i++)
                planner.executeUpdate(qry + deptvals[i], tx);
            System.out.println("DEPT records inserted.");

            qry = "create table COURSE(CId int, Title varchar(50), DeptId int)";
            planner.executeUpdate(qry, tx);
            System.out.println("Table COURSE created.");

            qry = "insert into COURSE(CId, Title, DeptId) values ";
            String[] coursevals = {
                    "(10, 'db systems', 10)",
                    "(11, 'compilers', 10)",
                    "(12, 'discrete structures', 10)",
                    "(13, 'python language', 10)",
                    "(14, 'java language', 10)",
                    "(15, 'frontend development', 10)",
                    "(16, 'backend development', 10)",
                    "(17, 'algorithms', 10)",
                    "(18, 'big data implementation', 10)",
                    "(19, 'machine learning', 10)",
                    "(20, 'how to addition', 20)",
                    "(21, 'how to subtraction', 20)",
                    "(22, 'calculus', 20)",
                    "(23, 'algebra', 20)",
                    "(24, 'how to multiplication', 20)",
                    "(25, 'how to division', 20)",
                    "(26, 'what is one plus one', 20)",
                    "(27, 'integration', 20)",
                    "(28, 'differentiation', 20)",
                    "(29, 'graphs', 20)",
                    "(30, 'criminal law', 30)",
                    "(31, 'family law', 30)",
                    "(32, 'legal law', 30)",
                    "(33, 'corporate law', 30)",
                    "(34, 'law and order', 30)",
                    "(35, 'trial advocacy', 30)",
                    "(36, 'international law', 30)",
                    "(37, 'international arbitration', 30)",
                    "(38, 'newtons law', 30)",
                    "(39, 'foreign law', 30)",
                    "(40, 'how to draw a line', 40)",
                    "(41, 'how to draw a curve', 40)",
                    "(42, 'how to draw a circle', 40)",
                    "(43, 'how to draw a square', 40)",
                    "(44, 'how to draw a rectangle', 40)",
                    "(45, 'how to draw a star', 40)",
                    "(46, 'how to draw a heart', 40)",
                    "(47, 'how to draw a oval', 40)",
                    "(48, 'how to draw a spiral', 40)",
                    "(49, 'coffee brewing', 40)",
                    "(50, 'shady business', 50)",
                    "(51, 'none of your business', 50)",
                    "(52, 'lucrative business', 50)",
                    "(53, 'how to launder money', 50)",
                    "(54, 'how to catch money launderers', 50)",
                    "(55, 'startup opportunities', 50)",
                    "(56, 'what business do you have here', 50)",
                    "(57, 'mlm', 50)",
                    "(58, 'business casual', 50)",
                    "(59, 'snatching class participation', 50)",
                    "(60, 'computer engineering', 60)",
                    "(61, 'aerospace engineering', 60)",
                    "(62, 'mechanical engineering', 60)",
                    "(63, 'biomedical engineering', 60)",
                    "(64, 'environmental engineering', 60)",
                    "(65, 'chemical engineering', 60)",
                    "(66, 'civil engineering', 60)",
                    "(67, 'fix plumbing', 60)",
                    "(68, 'repair life', 60)",
                    "(69, 'change lightbulb', 60)",
                    "(70, 'climate ecology architecture', 70)",
                    "(71, 'topics in landscape', 70)",
                    "(72, 'sustainable architecture', 70)",
                    "(73, 'draw house', 70)",
                    "(74, 'western architecture', 70)",
                    "(75, 'history of architecture', 70)",
                    "(76, 'geographical information systems', 70)",
                    "(77, 'design 1', 70)",
                    "(78, 'design 2', 70)",
                    "(79, 'design 3', 70)",
                    "(80, 'basic human pathology', 80)",
                    "(81, 'practices of palliative medicine', 80)",
                    "(82, 'stem cells and regenerative medicine', 80)",
                    "(83, 'symptom management in palliative care', 80)",
                    "(84, 'clinical management', 80)",
                    "(85, 'the ethics of biotechnology and innovation', 80)",
                    "(86, 'antimicrobial resistance', 80)",
                    "(87, 'infectious disease', 80)",
                    "(88, 'bio imaging', 80)",
                    "(89, 'advanced human pathology', 80)",
                    "(90, 'paediatric dentistry', 90)",
                    "(91, 'geriatric dentistry', 90)",
                    "(92, 'periodontology', 90)",
                    "(93, 'dental implantology', 90)",
                    "(94, 'endodontics', 90)",
                    "(95, 'pulling teeth', 90)",
                    "(96, 'brushing teeth', 90)",
                    "(97, 'washing mouth', 90)",
                    "(98, 'eating without mouth', 90)",
                    "(99, 'licking lips', 90)"

            };
            for (int i = 0; i < coursevals.length; i++)
                planner.executeUpdate(qry + coursevals[i], tx);
            System.out.println("COURSE records inserted.");

            qry = "create table SECTION(SectId int, CourseId int, Prof varchar(20), YearOffered int)";
            planner.executeUpdate(qry, tx);
            System.out.println("Table SECTION created.");

            qry = "insert into SECTION(SectId, CourseId, Prof, YearOffered) values ";
            String[] sectvals = {"(1,68,'Creaney',2002)",
                    "(2,25,'Wyleman',2014)",
                    "(3,72,'Westcot',2012)",
                    "(4,63,'Whitlock',2009)",
                    "(5,59,'Lucus',2013)",
                    "(6,63,'Spellward',2003)",
                    "(7,27,'Mapledoram',2008)",
                    "(8,15,'Tweddle',2005)",
                    "(9,38,'Thursfield',2013)",
                    "(10,60,'Peaker',2002)",
                    "(11,35,'Humpherston',2020)",
                    "(12,34,'Pauleau',2001)",
                    "(13,16,'Beldon',2015)",
                    "(14,39,'Lakenton',2021)",
                    "(15,78,'Spadoni',2011)",
                    "(16,20,'Struis',2020)",
                    "(17,27,'Haversham',2007)",
                    "(18,69,'McCrow',2015)",
                    "(19,75,'Underwood',2007)",
                    "(20,56,'Bewick',2000)",
                    "(21,15,'Newbold',2004)",
                    "(22,71,'Gymblett',2006)",
                    "(23,19,'Potebury',2012)",
                    "(24,35,'Molfino',2015)",
                    "(25,11,'Molines',2019)",
                    "(26,55,'Brunke',2011)",
                    "(27,86,'Bloschke',2022)",
                    "(28,57,'Earie',2022)",
                    "(29,53,'Hoodlass',2015)",
                    "(30,15,'Clandillon',2013)",
                    "(31,32,'Harkess',2010)",
                    "(32,15,'Cawthron',2001)",
                    "(33,98,'Opfer',2018)",
                    "(34,65,'Tolley',2018)",
                    "(35,98,'Levitt',2009)",
                    "(36,58,'Snoad',2001)",
                    "(37,48,'Silverwood',2010)",
                    "(38,20,'Occleshaw',2009)",
                    "(39,89,'Merrison',2010)",
                    "(40,73,'Sommerton',2021)",
                    "(41,92,'Wanless',2005)",
                    "(42,66,'Muddiman',2001)",
                    "(43,97,'Castellanos',2000)",
                    "(44,27,'Kits',2016)",
                    "(45,77,'Hall',2003)",
                    "(46,51,'Burgne',2022)",
                    "(47,43,'Marunchak',2012)",
                    "(48,73,'Croshaw',2001)",
                    "(49,13,'Murrhaupt',2011)",
                    "(50,83,'McEnteggart',2001)",
                    "(51,27,'Crecy',2020)",
                    "(52,46,'Brazier',2006)",
                    "(53,90,'Wakeham',2004)",
                    "(54,20,'Itzhayek',2004)",
                    "(55,34,'Di Lucia',2020)",
                    "(56,31,'Luscott',2004)",
                    "(57,10,'Boshere',2013)",
                    "(58,44,'Sharrock',2002)",
                    "(59,86,'Langwade',2017)",
                    "(60,58,'Sorrie',2000)",
                    "(61,89,'Advani',2002)",
                    "(62,81,'De Atta',2001)",
                    "(63,98,'Cake',2002)",
                    "(64,60,'Goadsby',2022)",
                    "(65,99,'MacKibbon',2001)",
                    "(66,57,'Jenkerson',2021)",
                    "(67,53,'Crawford',2011)",
                    "(68,51,'Vido',2013)",
                    "(69,15,'Glaister',2006)",
                    "(70,85,'Kirton',2019)",
                    "(71,25,'Mollett',2018)",
                    "(72,65,'Coate',2009)",
                    "(73,20,'Dyball',2016)",
                    "(74,27,'Bartosinski',2015)",
                    "(75,61,'Deme',2009)",
                    "(76,72,'Stealey',2021)",
                    "(77,56,'Rising',2019)",
                    "(78,80,'Buckhurst',2007)",
                    "(79,78,'Thurborn',2021)",
                    "(80,51,'Isaksson',2002)",
                    "(81,83,'Klageman',2015)",
                    "(82,45,'Divina',2004)",
                    "(83,73,'Barca',2006)",
                    "(84,89,'Scad',2010)",
                    "(85,46,'Stainbridge',2015)",
                    "(86,47,'Dahlborg',2014)",
                    "(87,21,'Jepp',2014)",
                    "(88,15,'Deelay',2020)",
                    "(89,78,'Gabits',2022)",
                    "(90,29,'Castane',2011)",
                    "(91,77,'Busk',2004)",
                    "(92,43,'Westhofer',2012)",
                    "(93,37,'Hallifax',2022)",
                    "(94,34,'Sebyer',2015)",
                    "(95,76,'Marjoribanks',2002)",
                    "(96,40,'OBrogan',2009)",
                    "(97,43,'Brenstuhl',2006)",
                    "(98,96,'Rubinovitch',2002)",
                    "(99,47,'Tavinor',2006)",
                    "(100,65,'Klos',2004)"};
            for (int i = 0; i < sectvals.length; i++)
                planner.executeUpdate(qry + sectvals[i], tx);
            System.out.println("SECTION records inserted.");

            qry = "create table ENROLL(EId int, StudentId int, SectionId int, Grade varchar(2))";
            planner.executeUpdate(qry, tx);
            System.out.println("Table ENROLL created.");

            qry = "insert into ENROLL(EId, StudentId, SectionId, Grade) values ";
            String[] enrollvals = {"(1,92,55,'C')",
                    "(2,100,66,'C+')",
                    "(3,22,33,'C')",
                    "(4,24,29,'B')",
                    "(5,61,32,'B')",
                    "(6,13,42,'C+')",
                    "(7,35,5,'C+')",
                    "(8,96,9,'D+')",
                    "(9,82,63,'A')",
                    "(10,37,43,'A-')",
                    "(11,54,82,'A')",
                    "(12,38,11,'B-')",
                    "(13,18,29,'B-')",
                    "(14,3,89,'D')",
                    "(15,88,31,'A+')",
                    "(16,43,90,'B-')",
                    "(17,63,82,'A+')",
                    "(18,79,43,'A-')",
                    "(19,95,89,'D+')",
                    "(20,68,82,'D')",
                    "(21,73,98,'B')",
                    "(22,9,43,'D')",
                    "(23,53,74,'A')",
                    "(24,14,50,'A+')",
                    "(25,38,36,'A')",
                    "(26,98,96,'D+')",
                    "(27,58,71,'D+')",
                    "(28,3,31,'D')",
                    "(29,59,69,'B-')",
                    "(30,15,59,'D')",
                    "(31,88,21,'A+')",
                    "(32,10,23,'C')",
                    "(33,78,50,'B'+')",
                    "(34,66,74,'D+')",
                    "(35,49,64,'A-')",
                    "(36,79,87,'D')",
                    "(37,48,80,'B-')",
                    "(38,99,16,'C')",
                    "(39,71,55,'B-')",
                    "(40,12,9,'A-')",
                    "(41,21,10,'C')",
                    "(42,80,63,'D')",
                    "(43,13,31,'B')",
                    "(44,65,99,'A+')",
                    "(45,7,57,'A')",
                    "(46,73,64,'B-')",
                    "(47,28,19,'D')",
                    "(48,85,18,'D')",
                    "(49,26,35,'A+')",
                    "(50,57,6,'B'+')",
                    "(51,91,95,'B-')",
                    "(52,72,93,'B-')",
                    "(53,56,84,'D')",
                    "(54,3,2,'D')",
                    "(55,51,10,'A-')",
                    "(56,57,97,'B'+')",
                    "(57,31,26,'B'+')",
                    "(58,19,50,'D+')",
                    "(59,85,38,'A-')",
                    "(60,70,5,'B-')",
                    "(61,62,74,'D')",
                    "(62,17,28,'B')",
                    "(63,46,77,'B-')",
                    "(64,34,48,'A+')",
                    "(65,9,12,'B'+')",
                    "(66,40,72,'A+')",
                    "(67,84,99,'A+')",
                    "(68,60,85,'B')",
                    "(69,3,78,'B')",
                    "(70,26,46,'A-')",
                    "(71,80,93,'C')",
                    "(72,55,54,'C+')",
                    "(73,65,4,'C+')",
                    "(74,28,48,'B'+')",
                    "(75,78,84,'C+')",
                    "(76,31,54,'A-')",
                    "(77,27,58,'D+')",
                    "(78,61,92,'B'+')",
                    "(79,83,71,'A+')",
                    "(80,28,83,'B'+')",
                    "(81,57,27,'B')",
                    "(82,57,67,'A+')",
                    "(83,70,57,'A-')",
                    "(84,79,27,'A')",
                    "(85,24,7,'C')",
                    "(86,87,36,'B-')",
                    "(87,57,23,'A+')",
                    "(88,72,64,'B'+')",
                    "(89,39,11,'D+')",
                    "(90,28,39,'B-')",
                    "(91,77,30,'C+')",
                    "(92,34,69,'C+')",
                    "(93,16,18,'C')",
                    "(94,68,15,'A-')",
                    "(95,22,13,'B-')",
                    "(96,16,29,'A+')",
                    "(97,37,77,'D')",
                    "(98,1,69,'C')",
                    "(99,10,37,'B')",
                    "(100,94,97,'A')"};
            for (int i = 0; i < enrollvals.length; i++)
                planner.executeUpdate(qry + enrollvals[i], tx);
            System.out.println("ENROLL records inserted.");

            qry = "create index sid_idx on student(sid) using hash";
            planner.executeUpdate(qry, tx);
            System.out.println("Created index sid_idx in student table");

            qry = "create index cid_idx on course(cid) using hash";
            planner.executeUpdate(qry, tx);
            System.out.println("Created index cid_idx in course");

            qry = "create index sectid_idx on section(sectid) using hash";
            planner.executeUpdate(qry, tx);
            System.out.println("Created index sectid_idx in student table");

            qry = "create index studentid_idx on enroll(studentid) using btree";
            planner.executeUpdate(qry, tx);
            System.out.println("Created index studentid_idx in enroll");

            tx.commit();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}